#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        scroll {
            bindings = <&mo 5>;
            key-positions = <18 19>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                          &kp W                  &kp E                          &kp R                   &kp T                                                                &kp Y            &kp U  &kp I      &kp O       &kp P
&mt CAPS A                     &kp S                  &kp D                          &kp F                   &kp G            &mkp LCLK                   &trans                  &kp H            &kp J  &kp K      &kp L       &kp QUESTION
&mt LEFT_SHIFT Z               &kp X                  &kp C                          &kp V                   &kp B            &trans                      &trans                  &kp N            &kp M  &kp COMMA  &kp PERIOD  &kp MINUS
&mt LEFT_CONTROL LEFT_CONTROL  &mt LEFT_ALT LEFT_ALT  &mt LEFT_COMMAND LEFT_COMMAND  &lt_to_layer_0 6 LG(H)  &lt 1 BACKSPACE  &lt_to_layer_0 2 ENTER      &lt_to_layer_0 3 SPACE  &mt GLOBE ENTER                                &mt BACKSPACE BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp EXCLAMATION           &kp AT_SIGN               &kp HASH           &kp DLLR         &kp PERCENT                      &kp CARET         &kp AMPERSAND      &kp ASTRK      &kp LPAR   &kp RIGHT_PARENTHESIS
&kp C_BRIGHTNESS_MINIMUM  &kp C_BRIGHTNESS_MAXIMUM  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans       &trans      &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp MINUS  &kp EQUAL
&kp PRINTSCREEN           &trans                    &trans             &trans           &trans       &trans      &trans  &kp COLON         &kp DOUBLE_QUOTES  &kp COMMA      &kp DOT    &kp SLASH
&trans                    &trans                    &trans             &trans           &trans       &trans      &trans  &trans                                                         &trans
            >;
        };

        NUM {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                          &kp F6        &kp F7        &kp F8        &kp F9        &kp F10
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans      &trans                &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&kp F11       &kp F12       &kp F13       &kp F14       &kp F15       &trans      &trans                &kp RG(W)     &kp RG(T)     &kp RG(TAB)   &kp RG(R)     &kp RG(F)
&trans        &trans        &trans        &trans        &trans        &trans      &kp RG(LEFT_BRACKET)  &kp RG(RBKT)                                            &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans     &trans              &kp UP_ARROW    &trans               &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp RC(A)  &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp RC(E)
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp RG(A)  &kp RG(LEFT_ARROW)  &trans          &kp RG(RIGHT_ARROW)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                              &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &to 4   &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
